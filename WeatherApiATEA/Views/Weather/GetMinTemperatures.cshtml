@model List<CityWeatherInfo>

<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>Minimal Temperature for Cities</h1>

    @if (Model != null && Model.Count > 0)
    {
        <canvas id="myChart" width="800" height="200"></canvas>

        <script type="module">
            document.addEventListener('DOMContentLoaded', function () {
                var ctx = document.getElementById('myChart').getContext('2d');

                var cityLabels = @Html.Raw(Json.Serialize(Model.Select(c => c.City)));
                var temperatures = @Html.Raw(Json.Serialize(Model.Select(c => c.Temperature)));
                var countries = @Html.Raw(Json.Serialize(Model.Select(c => c.Country)));
                var timeAdded = @Html.Raw(Json.Serialize(Model.Select(c => c.SavedAt)));
                timeAdded = timeAdded.map(function (timeAdded) {
                    return new Date(timeAdded);
                });

                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: cityLabels,
                        datasets: [{
                            label: 'Temperature',
                            data: temperatures,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            x: {
                                beginAtZero: true
                            },
                            y: {
                                beginAtZero: true
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        var index = context.dataIndex;
                                        var label = context.dataset.label || '';

                                        if (label) {
                                            label += ': ';
                                        }
                                        label += context.parsed.y + ' °C, Country: ' + countries[index] + ', Last Updated: ' + timeAdded[index];
                                        return label;
                                    }
                                }
                            }
                        },
                        onClick: function (event, elements) {
                            if (elements.length > 0) {
                                var clickedIndex = elements[0].index;
                                var clickedCity = cityLabels[clickedIndex];
                                window.location.href = 'https://localhost:7079/weather/gettwohourtrend/' + clickedCity;
                            }
                        }
                    }
                });
            });
        </script>
    }
    else
    {
        <p>No weather data available.</p>
    }
</body>
</html>
